.include beta.uasm
.include lab7macros.uasm
.include lab7checkoff.uasm

||| Handler for opcode 1 extension:
||| swapreg(RA,RC) swaps the contents of the two named registers.
||| UASM defn = .macro swapreg(RA,RC) betaopc(0x01,RA,0,RC)

regs:   RESERVE(32)                  | Array used to store register contents

UI: 
        save_all_regs(regs)
        LD(xp,-4,r0)
        extract_field(r0,31,26,r1)	
        CMPEQC(r1,16,r2)			
        BT(r2, LDB)            
    	CMPEQC(r1,0x11,r2)    | OPCODE 0b010001
    	BT(r2, STB)            
    	LD(r31,regs,r0)       
    	LD(r31,regs+4,r1)     
    	LD(r31,regs+8,r2)     
        BR(_IllegalInstruction)

LDB:
        extract_field(r0,20,16,r1)	
		MULC(r1,4,r1)
		ADDC(r1,regs,r1)
		LD(r1,0,r1)					
        extract_field(r0,15,0,r2)   
		SHLC(r2,16,r2)
		SRAC(r2,16,r2)				
		
		ADD(r1,r2,r3)				
		LD(r3,0,r4)					
		
		extract_field(r3,1,0,r5)	
		BEQ(r5,LDB_00,r31)
		SUBC(r5,1,r5)
		BEQ(r5,LDB_01,r31)
		SUBC(r5,1,r5)
		BEQ(r5,LDB_10,r31)
		SUBC(r5,1,r5)
		BEQ(r5,LDB_11,r31)
		
	LDB_00:
		extract_field(r4,7,0,r8)	
		BR(LDB_assign)
	LDB_01:
		extract_field(r4,15,8,r8)	
		BR(LDB_assign)
	LDB_10:
		extract_field(r4,23,16,r8)	
		BR(LDB_assign)
	LDB_11:
		extract_field(r4,31,24,r8)	
		BR(LDB_assign)
		
	LDB_assign:
		extract_field(r0,25,21,r9)	
		MULC(r9,4,r9)
        ST(r8,regs,r9)				
		
		restore_all_regs(regs)
		JMP(xp)
        
		
STB:
        extract_field(r0,20,16,r1)	
		MULC(r1,4,r1)
		ADDC(r1,regs,r1)
		LD(r1,0,r1)					
        extract_field(r0,15,0,r2)   
		SHLC(r2,16,r2)
		SRAC(r2,16,r2)				
		
		ADD(r1,r2,r3)				
		LD(r3,0,r4)					
		
		
		extract_field(r4,31,24,r13)
		extract_field(r4,23,16,r12)	
		extract_field(r4,15,8,r11)		
		extract_field(r4,7,0,r10)
		extract_field(r0,25,21,r8)	
		MULC(r8,4,r8)
		ADDC(r8,regs,r8)
		LD(r8,0,r8)					
		SHLC(r8,24,r8)
		SHRC(r8,24,r8)					
		
		extract_field(r3,1,0,r5)	
	
		BEQ(r5,STB_00,r31)
		SUBC(r5,1,r5)
		BEQ(r5,STB_01,r31)
		SUBC(r5,1,r5)
		BEQ(r5,STB_10,r31)
		SUBC(r5,1,r5)
		BEQ(r5,STB_11,r31)
		
	STB_00:
		MOVE(r8,r10)				
		BR(STB_assign)
	STB_01:
		MOVE(r8,r11)				
		BR(STB_assign)
	STB_10:
		MOVE(r8,r12)				
		BR(STB_assign)
	STB_11:
		MOVE(r8,r13)				
		BR(STB_assign)
		
	STB_assign:
		SHLC(r11,8,r11)
		SHLC(r12,16,r12)
		SHLC(r13,24,r13)			
		
		ADD(r10,r11,r11)
		ADD(r12,r13,r12)
		ADD(r11,r12,r12)			

		ST(r12,0,r3)				
		
        restore_all_regs(regs)
        JMP(xp)

IllegalInstruction:

        HALT()